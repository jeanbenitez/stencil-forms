/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';


import {
  FormRenderProps,
  FormValidator,
  FormValues,
} from './declarations';


export namespace Components {

  interface StencilFormDebug {
    'state': any;
  }
  interface StencilFormDebugAttributes extends StencilHTMLAttributes {
    'state'?: any;
  }

  interface StencilForm {
    'initialValues': FormValues;
    /**
    * Tell Form if initial form values are valid or not on first render
    */
    'isInitialValid'?: boolean;
    'renderer': (props: FormRenderProps<any>) => any;
    'validate': FormValidator<FormValues>;
    /**
    * Tells Form to validate the form on each input's onBlur event
    */
    'validateOnBlur'?: boolean;
    /**
    * Tells Form to validate the form on each input's onInput event
    */
    'validateOnInput'?: boolean;
  }
  interface StencilFormAttributes extends StencilHTMLAttributes {
    'initialValues'?: FormValues;
    /**
    * Tell Form if initial form values are valid or not on first render
    */
    'isInitialValid'?: boolean;
    'renderer'?: (props: FormRenderProps<any>) => any;
    'validate'?: FormValidator<FormValues>;
    /**
    * Tells Form to validate the form on each input's onBlur event
    */
    'validateOnBlur'?: boolean;
    /**
    * Tells Form to validate the form on each input's onInput event
    */
    'validateOnInput'?: boolean;
  }
}

declare global {
  interface StencilElementInterfaces {
    'StencilFormDebug': Components.StencilFormDebug;
    'StencilForm': Components.StencilForm;
  }

  interface StencilIntrinsicElements {
    'stencil-form-debug': Components.StencilFormDebugAttributes;
    'stencil-form': Components.StencilFormAttributes;
  }


  interface HTMLStencilFormDebugElement extends Components.StencilFormDebug, HTMLStencilElement {}
  var HTMLStencilFormDebugElement: {
    prototype: HTMLStencilFormDebugElement;
    new (): HTMLStencilFormDebugElement;
  };

  interface HTMLStencilFormElement extends Components.StencilForm, HTMLStencilElement {}
  var HTMLStencilFormElement: {
    prototype: HTMLStencilFormElement;
    new (): HTMLStencilFormElement;
  };

  interface HTMLElementTagNameMap {
    'stencil-form-debug': HTMLStencilFormDebugElement
    'stencil-form': HTMLStencilFormElement
  }

  interface ElementTagNameMap {
    'stencil-form-debug': HTMLStencilFormDebugElement;
    'stencil-form': HTMLStencilFormElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
